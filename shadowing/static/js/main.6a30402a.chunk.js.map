{"version":3,"sources":["utils.js","RestAPI.js","Home.jsx","Subtitle.jsx","Shadowing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["camelizeStr","str","replace","_","x","toUpperCase","snakifyStr","concat","toLowerCase","convertCase","convertFunc","converter","thing","Array","map","i","Object","newObj","keys","forEach","k","utils","parseQuery","querystring","window","location","search","slice","qs","stringifyQuery","obj","camelizeKeys","snakifyKeys","api","method","arguments","length","undefined","src","data","params","url","headers","Content-Type","withCredentials","Utils","axios","then","resp","catch","e","RestAPI","id","Home","state","resourceIds","_this2","this","setState","react_default","a","createElement","className","Link","key","to","React","Component","Subtitle","subtitles","stopPoint","playerRef","createRef","exportBtnRef","onTimeUpdate","player","_this","current","currentTime","pause","subtitle","startTime","endTime","toConsumableArray","onMergeUpClick","prev","content","push","splice","onPlaySentenceClick","play","onPlayClick","onExportClick","console","log","JSON","stringify","props","match","addEventListener","Clipboard","on","alert","removeEventListener","_this3","controls","ref","sentence","onClick","role","aria-label","toFixed","j","Shadowing","countdownStyle","interval","countdownTimer","countdownDuration","setTimeout","stopCountdown","startCountdown","onPlayNextClick","onPlayPrevClick","onPauseClick","onPlaySpeedChange","value","currentTarget","playbackRate","onIntervalChange","parseInt","duration","width","visibility","transitionDuration","clearTimeout","defaultValue","onChange","style","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a30402a.chunk.js","sourcesContent":["import * as qs from 'querystring';\n\n/* parseQuery */\nfunction parseQuery(str) {\n  const querystring = str || window.location.search.slice(1);\n  return qs.parse(querystring);\n}\n/* stringifyQuery */\nfunction stringifyQuery(obj) {\n  return qs.stringify(obj);\n}\n\nfunction camelizeStr(str) {\n  return str.replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n\nfunction snakifyStr(str) {\n  return str.replace(/(?:^|\\.?)([A-Z])/g, (_, x) => `_${x.toLowerCase()}`);\n}\n\nfunction convertCase(convertFunc) {\n  function converter(thing) {\n    if (thing instanceof Array) {\n      return thing.map(i => converter(i));\n    } else if (thing instanceof Object) {\n      const newObj = {};\n      Object.keys(thing).forEach(k => {\n        newObj[convertFunc(k)] = converter(thing[k]);\n      });\n      return newObj;\n    }\n    return thing;\n  }\n  return converter;\n}\n\nexport default {\n  parseQuery,\n  stringifyQuery,\n  camelizeStr,\n  snakifyStr,\n  camelizeKeys: convertCase(camelizeStr),\n  snakifyKeys: convertCase(snakifyStr)\n};\n","import axios from 'axios';\nimport Utils from './utils';\n\nfunction api(method = 'get', src, data = {}) {\n  // const url = src;\n  const url = '/shadowing' + src;\n\n  const params = {\n    method,\n    url,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  };\n  if (method === 'get' || method === 'delete') {\n    params.params = Utils.snakifyKeys(data);\n  } else {\n    params.data = Utils.snakifyKeys(data);\n  }\n\n  return axios(params)\n    .then(resp => Utils.camelizeKeys(resp.data))\n    .catch(e => {\n      throw e;\n    });\n}\n\nexport default {\n  getResources() {\n    return api('get', '/resources/index.json');\n  },\n  getSubtitle(id) {\n    return api('get', `/resources/${id}/subtitle.json`);\n  },\n  getMergedSubtitle(id) {\n    return api('get', `/resources/${id}/merged.json`);\n  }\n};\n","import React from 'react';\nimport RestAPI from './RestAPI';\nimport { Link } from 'react-router-dom';\n\nclass Home extends React.Component {\n  state = {\n    resourceIds: []\n  };\n  componentDidMount() {\n    RestAPI.getResources().then(resourceIds => {\n      this.setState({ resourceIds });\n    });\n  }\n  render() {\n    return (\n      <div className=\"views-home\">\n        <h1>ESL Shadowing</h1>\n        <nav className=\"home-nav\">\n          {this.state.resourceIds.map(id => (\n            <Link key={id} to={`/shadowing/audio/${id}`}>\n              {id}\n            </Link>\n          ))}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport * as Clipboard from 'clipboard';\nimport RestAPI from './RestAPI';\n\nclass Subtitle extends React.Component {\n  state = {\n    subtitles: [],\n    stopPoint: null\n  };\n  playerRef = React.createRef();\n  exportBtnRef = React.createRef();\n\n  componentDidMount() {\n    // fetch data\n    const id = this.props.match.params.id;\n    RestAPI.getSubtitle(id).then(subtitles => {\n      this.setState({ subtitles });\n    });\n\n    // handle timeupdate\n    this.playerRef.current.addEventListener('timeupdate', this.onTimeUpdate);\n\n    // export\n    const clipboard = new Clipboard(this.exportBtnRef.current);\n    clipboard.on('success', () => {\n      alert('copied');\n    });\n  }\n  componentWillUnmount() {\n    this.playerRef.current.removeEventListener('timeupdate', this.onTimeUpdate);\n  }\n\n  onTimeUpdate = () => {\n    const player = this.playerRef.current;\n    const currentTime = player.currentTime;\n    const stopPoint = this.state.stopPoint;\n    if (stopPoint && currentTime >= stopPoint) {\n      player.currentTime -= 0.3;\n      player.pause();\n    }\n\n    const subtitles = this.state.subtitles;\n    subtitles.forEach(subtitle => {\n      if (currentTime > subtitle.startTime && currentTime < subtitle.endTime) {\n        subtitle.current = true;\n      } else {\n        subtitle.current = false;\n      }\n    });\n    this.setState({ subtitles: [...subtitles] });\n  };\n  onMergeUpClick = i => {\n    const subtitles = this.state.subtitles;\n    const prev = subtitles[i - 1];\n    const current = subtitles[i];\n    prev.endTime = current.endTime;\n    current.content.forEach(content => {\n      prev.content.push(content);\n    });\n    subtitles.splice(i, 1);\n    this.setState({ subtitles: [...subtitles] });\n  };\n  onPlaySentenceClick = i => {\n    const subtitle = this.state.subtitles[i];\n    this.playerRef.current.currentTime = subtitle.startTime;\n    this.playerRef.current.play();\n    this.setState({ stopPoint: subtitle.endTime });\n  };\n  onPlayClick = () => {\n    this.playerRef.current.play();\n    this.setState({ stopPoint: null });\n  };\n  onExportClick = () => {\n    console.log(JSON.stringify(this.state.subtitles, null, 4));\n  };\n\n  render() {\n    const id = this.props.match.params.id;\n    const subtitles = this.state.subtitles;\n\n    return (\n      <div className=\"views-subtitle\">\n        <h2>Subtitle: {id}</h2>\n        <div className=\"player\">\n          <audio\n            controls\n            ref={this.playerRef}\n            src={`/shadowing/resources/${id}/audio.mp3`}\n          />\n        </div>\n        <div className=\"subtitles\">\n          {subtitles.map((sentence, i) => (\n            <div\n              key={i}\n              className={`subtitle ${sentence.current ? 'current' : ''}`}\n            >\n              <div className=\"merge-up\" onClick={() => this.onMergeUpClick(i)}>\n                <span role=\"img\" aria-label=\"merge up\">\n                  ⬆️\n                </span>\n              </div>\n              <div className=\"time\">\n                {sentence.startTime}s - {sentence.endTime}s (\n                {(sentence.endTime - sentence.startTime).toFixed(2)}s)\n              </div>\n              <div\n                className=\"content\"\n                onClick={() => this.onPlaySentenceClick(i)}\n              >\n                {sentence.content.map((content, j) => (\n                  <div key={j}>{content}</div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"btns\">\n          <button className=\"btn\" onClick={this.onPlayClick}>\n            ▶ Play\n          </button>\n          <button\n            className=\"btn\"\n            ref={this.exportBtnRef}\n            onClick={this.onExportClick}\n          >\n            OK\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Subtitle;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RestAPI from './RestAPI';\n\nclass Shadowing extends React.Component {\n  state = {\n    subtitles: [],\n    current: 0,\n    countdownStyle: {}\n  };\n  interval = -1;\n  countdownTimer = null;\n  playerRef = React.createRef();\n\n  componentDidMount() {\n    // fetch data\n    const id = this.props.match.params.id;\n    RestAPI.getMergedSubtitle(id).then(subtitles => {\n      this.setState({ subtitles });\n    });\n\n    // handle timeupdate\n    this.playerRef.current.addEventListener('timeupdate', this.onTimeUpdate);\n  }\n  componentWillUnmount() {\n    this.stopCountdown();\n    this.playerRef.current.removeEventListener('timeupdate', this.onTimeUpdate);\n  }\n\n  onTimeUpdate = () => {\n    const player = this.playerRef.current;\n    const currentTime = player.currentTime;\n    const interval = this.interval;\n    const subtitles = this.state.subtitles;\n    const subtitle = subtitles[this.state.current];\n\n    if (interval && currentTime >= subtitle.endTime && !this.countdownTimer) {\n      // player.currentTime -= 0.3;\n      player.pause();\n\n      // start count down\n      if (interval > 0) {\n        const countdownDuration =\n          interval * (subtitle.endTime - subtitle.startTime) * 1000;\n        this.countdownTimer = setTimeout(() => {\n          this.play();\n          this.stopCountdown();\n        }, countdownDuration);\n        this.startCountdown(countdownDuration);\n      }\n    }\n\n    // update current\n    let current;\n    subtitles.forEach((subtitle, i) => {\n      if (currentTime > subtitle.startTime && currentTime < subtitle.endTime) {\n        current = i;\n      }\n    });\n    if (current) {\n      this.setState({ current });\n    }\n  };\n  startCountdown(duration) {\n    this.setState({\n      countdownStyle: {\n        width: '0%',\n        visibility: 'visible',\n        transitionDuration: `${duration / 1000}s`\n      }\n    });\n  }\n  stopCountdown() {\n    this.setState({ countdownStyle: {} });\n    clearTimeout(this.countdownTimer);\n    this.countdownTimer = null;\n  }\n  play = () => {\n    this.stopCountdown();\n    this.playerRef.current.play();\n  };\n  onPlaySentenceClick = i => {\n    const subtitle = this.state.subtitles[i];\n    this.playerRef.current.currentTime = subtitle.startTime;\n    this.setState({ current: i }, () => {\n      this.play();\n    });\n  };\n  onPlayNextClick = () => {\n    const current = this.state.current + 1;\n    if (current >= this.state.subtitles.length) return;\n\n    this.onPlaySentenceClick(current);\n  };\n  onPlayPrevClick = () => {\n    const current = this.state.current - 1;\n    if (current < 0) return;\n\n    this.onPlaySentenceClick(current);\n  };\n  onPauseClick = () => {\n    this.stopCountdown();\n    this.playerRef.current.pause();\n  };\n  onPlaySpeedChange = e => {\n    const value = e.currentTarget.value;\n    this.playerRef.current.playbackRate = value;\n  };\n  onIntervalChange = e => {\n    this.interval = parseInt(e.currentTarget.value);\n  };\n  render() {\n    const id = this.props.match.params.id;\n    const subtitles = this.state.subtitles;\n    const current = this.state.current;\n\n    return (\n      <div className=\"views-shadowing\">\n        <h2>\n          ESL Shadowing <Link to=\"/shadowing\">back</Link>\n        </h2>\n        <div className=\"settings\">\n          <div className=\"settings-field\">\n            <span>speed:</span>\n            <select defaultValue={1} onChange={this.onPlaySpeedChange}>\n              <option value={0.6}>0.6x</option>\n              <option value={0.8}>0.8x</option>\n              <option value={1}>1x</option>\n              <option value={1.5}>1.5x</option>\n            </select>\n          </div>\n          <div className=\"settings-field\">\n            <span>interval:</span>\n            <select defaultValue={-1} onChange={this.onIntervalChange}>\n              <option value={-1}>stop</option>\n              <option value={0}>dont stop</option>\n              <option value={2}>2x</option>\n              <option value={3}>3x</option>\n              <option value={5}>5x</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"player\">\n          <audio\n            controls\n            ref={this.playerRef}\n            src={`/shadowing/resources/${id}/audio.mp3`}\n          />\n        </div>\n        <div className=\"countdown-bar\" style={this.state.countdownStyle} />\n\n        <div className=\"btns\">\n          <div className=\"btn\" onClick={this.play}>\n            Play\n          </div>\n          <div className=\"btn\" onClick={this.onPauseClick}>\n            Pause\n          </div>\n          <div className=\"btn\" onClick={this.onPlayNextClick}>\n            Next\n          </div>\n          <div className=\"btn\" onClick={this.onPlayPrevClick}>\n            Prev\n          </div>\n        </div>\n        <div className=\"subtitles\">\n          {subtitles.map((sentence, i) => (\n            <div\n              key={i}\n              className={`subtitle ${i === current ? 'current' : ''}`}\n              onClick={() => this.onPlaySentenceClick(i)}\n            >\n              {sentence.content.map((content, j) => (\n                <div key={j}>{content}</div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shadowing;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Subtitle from './Subtitle';\nimport Shadowing from './Shadowing';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/shadowing/\" component={Home} />\n          <Route exact path=\"/shadowing/subtitle/:id\" component={Subtitle} />\n          <Route path=\"/shadowing/audio/:id\" component={Shadowing} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}